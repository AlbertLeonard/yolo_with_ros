#!/usr/bin/env python

import rospy
import tf
import tf2_ros

from moveit_python import *
from moveit_msgs.msg import Grasp, PlaceLocation
import geometry_msgs
from sensor_msgs.msg import JointState
import std_msgs

import moveit_commander
import moveit_msgs.msg

from msg_gateway.msg import Command_msgs

i = 1

def arm_rest():
	
	#pose_target.orientation.x = 0
	#pose_target.orientation.y = 0.78
	#pose_target.orientation.z = 0
	#pose_target.orientation.w = 0.61
	pose_target.position.x = 0.155
	pose_target.position.y = 0
	pose_target.position.z = 0.241
	group.set_pose_target(pose_target)
	
	#group.go(wait=False)
	
  
def arm_stand_by():
	
	#pose_target.orientation.w = 1.0
	pose_target.position.x = 0.4
	pose_target.position.y = 0
	pose_target.position.z = 0.45
	
	#group.go(wait=False)
	
def arm_auto():
	
	#pose_target.orientation.w = 1.0
	
	arm_stand_by()
	group.set_pose_target(pose_target)
	group.go(wait=True)
	
	pose_target.position.x = 0.5
	pose_target.position.y = 0
	pose_target.position.z = 0.45
	group.set_pose_target(pose_target)
	group.go(wait=True)
	
	pose_target.position.x = 0.4
	pose_target.position.y = 0
	pose_target.position.z = 0.2
	group.set_pose_target(pose_target)
	group.go(wait=True)
	
	pose_target.position.x = 0.4
	pose_target.position.y = 0
	pose_target.position.z = 0.5
	group.set_pose_target(pose_target)
	group.go(wait=True)
	

	pose_target.position.x = 0.6
	pose_target.position.y = 0
	pose_target.position.z = 0.3
	group.set_pose_target(pose_target)
	group.go(wait=True)
	
	pose_target.position.x = 0.4
	pose_target.position.y = 0.4
	pose_target.position.z = 0.3
	group.set_pose_target(pose_target)
	group.go(wait=True)
	
	pose_target.position.x = 0.4
	pose_target.position.y = -0.3
	pose_target.position.z = 0.4
	group.set_pose_target(pose_target)
	group.go(wait=True)
	
	pose_target.position.x = 0.4
	pose_target.position.y = 0
	pose_target.position.z = 0.3
	group.set_pose_target(pose_target)
	group.go(wait=True)

	#group.go(wait=False)
	

pose_target = geometry_msgs.msg.Pose()

roll_offset  =  0
yaw_offset   =  -0.12
pitch_offset =  0

q = tf.transformations.quaternion_from_euler(roll_offset, yaw_offset, pitch_offset)

pose_target.orientation.x = q[0]
pose_target.orientation.y = q[1]
pose_target.orientation.z = q[2]
pose_target.orientation.w = q[3]
pose_target.position.x = 0.4
pose_target.position.y = 0
pose_target.position.z = 0.45

COMMAND = Command_msgs()

rospy.init_node("arm_auto_move")

group = moveit_commander.MoveGroupCommander("my_arm")

arm_rest()
group.go(wait=True)

rate = rospy.Rate(30) # 30hz

while not rospy.is_shutdown():
	
	#group.go(wait=True)
	
	arm_auto()
	
	rospy.sleep(1)
	
	rate.sleep()
